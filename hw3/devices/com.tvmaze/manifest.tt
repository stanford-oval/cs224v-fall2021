
// Copyright 2021 The Board of Trustees of the Leland Stanford Junior University
//
// Redistribution and use in source and binary forms, with or
// without modification, are permitted provided that the following
// conditions are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above
//    copyright notice, this list of conditions and the following
//    disclaimer in the documentation and/or other materials
//    provided with the distribution.
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
// OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Author: Silei Xu <silei@cs.stanford.edu>

class @com.tvmaze 
#_[thingpedia_name="TVmaze"]
#_[thingpedia_description="TV listings from TVMaze API"]
#_[canonical="tvmaze"]
#[license="BSD-3-Clause"]
#[license_gplcompatible=true]
#[subcategory="service"] {
  import loader from @org.thingpedia.v2();
  import config from @org.thingpedia.config.none(api_key="9O0t973JDtd3sKnzxU8MOB-QS-f0N3os");

  list query shows(in req query: String,
             out id: Entity(com.tvmaze:show),
             out description: String,
             out image: Entity(tt:picture),
             out link: Entity(tt:url),
             out genres: Array(Entity(com.tvmaze:genre)),
             out runtime: Measure(ms),
             out premieredAt: Date,
             out rating: Number,
             out channel: Entity(com.tvmaze:channel),
             out schedule: RecurrentTimeSpecification,
             out casts: Array(Entity(com.tvmaze:people)), 
             out directors: Array(Entity(com.tvmaze:people)),
             out producers: Array(Entity(com.tvmaze:people)),
             out writers: Array(Entity(com.tvmaze:people)))
  #_[canonical=["show"]];

  list query people(in req query: String,
              out id: Entity(com.tvmaze:people),
              out link: Entity(tt:url),
              out country: Entity(tt:country),
              out birthday: Date,
              out gender: Enum(male, female),
              out image: Entity(tt:picture),
              out shows: Array(Entity(com.tvmzae:show)))
  #_[canonical=["person", "people"]]; 
}